{"ast":null,"code":"var _jsxFileName = \"/home/martinm8a/Escritorio/meli-app/client/src/components/Catalogo.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport ProductCard from \"./ProductCard.js\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\"; //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Catalogo = props => {\n  _s();\n\n  //>>>>>>>>>>>>>>>> Estados\n  var [products, setProducts] = useState([]);\n  var [orderBy, setOrderBy] = useState(\"\");\n  var [estadoProd, setEstadoProd] = useState(\"new\");\n  const busqueda = props.palabra; //>>>>>>>>>>>>>>>> onSubmit   \n\n  const onSubmitForm = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.get(`http://localhost:5001/api/search?q=${busqueda}`);\n      const jsonData = response.data;\n      console.log(Array.isArray(jsonData));\n      await setProducts(jsonData);\n    } catch (err) {\n      console.error(\"este es el error\", err.message);\n    }\n  }; // useEffect(()=>{\n  //     onSubmitForm()\n  // }, []);\n\n\n  {//     var sortF = () => {    \n    //     }\n    //     orderBy = 'priceASC'\n    //    var prod = products.sort(sortF)\n    //    const ordenMen = ()=>{\n    //     setOrderBy ('priceASC')\n    // \n  } //pasando como parametros de setProducts\n\n  {// const ordenMen = products.sort((a, b) => {\n    //     if (a.price < b.price) {\n    //         return -1\n    //     } \n    //     if (a.price > b.price) {\n    //         return 1\n    //     }\n    //     return 0\n    // })\n    // const ordenMay = products.sort((a, b) => {\n    //         if (a.price < b.price) {\n    //             return 1\n    //         } \n    //         if (a.price > b.price) {\n    //             return -1\n    //         }\n    //         return 0\n    //     })\n  } //>>>>>>>>>>>>>>>>>> Ordenamiento por precios\n\n  var sortF = () => {};\n\n  switch (orderBy) {\n    case 'priceASC':\n      sortF = (a, b) => {\n        if (a.price < b.price) {\n          return -1;\n        }\n\n        if (a.price > b.price) {\n          return 1;\n        }\n\n        return 0;\n      };\n\n      break;\n\n    case 'priceDSC':\n      sortF = (a, b) => {\n        if (a.price < b.price) {\n          return 1;\n        }\n\n        if (a.price > b.price) {\n          return -1;\n        }\n\n        return 0;\n      };\n\n      break;\n\n    default:\n      break;\n  }\n\n  {// function esNuevo(products) {\n    //     return products.condition ===\"new\"\n    //   }\n    //   function esUsado(products) {\n    //     return products.condition ===\"used\"\n    //   }\n    // var condicion = (condicion, esNuevo, esUsado) => {\n    //     if (condicion === \"new\"){\n    //         return esNuevo\n    //     }\n    // }\n  } //>>>>>>>>>>>>>>>>>>>>Condicion del producto\n\n  const esNuevo = () => item => {\n    return item.condition === \"new\";\n  };\n\n  const esUsado = () => item => {\n    return item.condition === \"used\";\n  };\n\n  {// var condicion = ()=>{}  \n    // switch (estadoProd) {\n    //     case \"new\":\n    //         var condicion = ()=> {item=>{return item.condition === \"new\"}}\n    //         break;\n    //     case \"used\":\n    //         function(){item=>{return item.condition === \"used\"}}\n    //         break;\n    //     default:\n    //         break;\n    // }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: products.map(item => {\n      /*#__PURE__*/\n      _jsxDEV(BootstrapTable, {\n        title: item.title,\n        price: item.price,\n        currency_id: item.currency_id,\n        available_quantity: item.available_quantity,\n        thumbnail: item.thumbnail,\n        condition: item.condition,\n        pagination: paginationFactory()\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this); // <Fragment>\n  //     {\" \"}\n  //     <div>COmoponente catalogo</div>\n  //     <h1>{props.mascota}</h1>\n  //     <form className=\"\" onSubmit={onSubmitForm}>\n  //         <button type=\"submit\">tocame bb</button>\n  //     </form>\n  //              <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n  //                 Orden por Precio \n  //                 <hr/>\n  //                 <label className=\"btn btn-secondary\" onClick={() =>{setOrderBy ('priceASC')}}>\n  //                     <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> M- a M+\n  //                 </label>\n  //                 <label className=\"btn btn-secondary\" onClick={() =>{setOrderBy ('priceDSC')}}  >\n  //                     <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> M+ a M-\n  //                 </label> \n  //             </div>\n  //             <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n  //                 Orden por Condicion\n  //                 <hr/>\n  //                 <label className=\"btn btn-secondary\" onClick={() =>{setEstadoProd (\"new\")}}>\n  //                     <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> nuevo\n  //                 </label>\n  //                 <label className=\"btn btn-secondary\" onClick={() =>{setEstadoProd (\"used\")}}  >\n  //                     <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> usado\n  //                 </label> \n  //             </div>\n  //     <div>\n  //         {/* {products.sort(sortF).filter(estadoProd === \"new\" ? esNuevo() : esUsado()).map((item) => {\n  //             return (\n  //                 <ProductCard\n  //                     key={item.id}\n  //                     title={item.title}\n  //                     price={item.price}\n  //                     currency_id={item.currency_id}\n  //                     available_quantity={item.available_quantity}\n  //                     thumbnail={item.thumbnail}\n  //                     condition={item.condition}\n  //                 />\n  //             );\n  //         })} */}\n  //     </div>\n  // </Fragment>\n};\n\n_s(Catalogo, \"tkWeDT4SaKAZVTpB4I9oluEYnis=\");\n\n_c = Catalogo;\nexport default Catalogo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalogo\");","map":{"version":3,"sources":["/home/martinm8a/Escritorio/meli-app/client/src/components/Catalogo.js"],"names":["React","Fragment","useEffect","useState","axios","ProductCard","BootstrapTable","paginationFactory","ReactBootstrap","Catalogo","props","products","setProducts","orderBy","setOrderBy","estadoProd","setEstadoProd","busqueda","palabra","onSubmitForm","e","preventDefault","response","get","jsonData","data","console","log","Array","isArray","err","error","message","sortF","a","b","price","esNuevo","item","condition","esUsado","map","title","currency_id","available_quantity","thumbnail","id"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\"\nimport ProductCard from \"./ProductCard.js\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport * as ReactBootstrap from \"react-bootstrap\";\n\n//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n\n\nconst Catalogo = (props) => {\n \n//>>>>>>>>>>>>>>>> Estados\n    var [products, setProducts] = useState([]);\n    var [orderBy, setOrderBy] = useState(\"\")\n    var [estadoProd, setEstadoProd] = useState(\"new\")\n    const busqueda = props.palabra;\n\n //>>>>>>>>>>>>>>>> onSubmit   \n    const onSubmitForm = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await axios.get(`http://localhost:5001/api/search?q=${busqueda}`)\n            const jsonData = response.data\n            console.log(Array.isArray(jsonData));\n\n            await setProducts(jsonData)\n\n        } catch (err) {\n            console.error(\"este es el error\", err.message)\n        }\n    }\n  \n    // useEffect(()=>{\n    //     onSubmitForm()\n    // }, []);\n    \n{    \n//     var sortF = () => {    \n//     }\n\n//     orderBy = 'priceASC'\n\n//    var prod = products.sort(sortF)\n\n//    const ordenMen = ()=>{\n//     setOrderBy ('priceASC')\n// \n}\n\n//pasando como parametros de setProducts\n{\n// const ordenMen = products.sort((a, b) => {\n//     if (a.price < b.price) {\n//         return -1\n//     } \n//     if (a.price > b.price) {\n//         return 1\n//     }\n//     return 0\n// })\n\n// const ordenMay = products.sort((a, b) => {\n//         if (a.price < b.price) {\n//             return 1\n//         } \n//         if (a.price > b.price) {\n//             return -1\n//         }\n//         return 0\n//     })\n}\n//>>>>>>>>>>>>>>>>>> Ordenamiento por precios\nvar sortF = () => {}\n    \n    switch (orderBy) {\n        case 'priceASC':\n            sortF = (a, b) => {\n                if (a.price < b.price) {\n                    return -1\n                }\n                if (a.price > b.price) {\n                    return 1\n                }\n                return 0\n            }\n            break;\n        case 'priceDSC':\n            sortF = (a, b) => {\n                if (a.price < b.price) {\n                    return 1\n                }\n                if (a.price > b.price) {\n                    return -1\n                }\n                return 0\n            }\n            break;\n        default:\n            break;\n    }\n{\n    // function esNuevo(products) {\n    //     return products.condition ===\"new\"\n    //   }\n    //   function esUsado(products) {\n    //     return products.condition ===\"used\"\n    //   }\n\n    // var condicion = (condicion, esNuevo, esUsado) => {\n    //     if (condicion === \"new\"){\n    //         return esNuevo\n    //     }\n    // }\n\n    }\n   //>>>>>>>>>>>>>>>>>>>>Condicion del producto\n    const esNuevo =()=> item=>{return item.condition === \"new\"}\n\n    const esUsado= ()=> item=>{return item.condition === \"used\"}\n\n{\n    // var condicion = ()=>{}  \n    // switch (estadoProd) {\n    //     case \"new\":\n    //         var condicion = ()=> {item=>{return item.condition === \"new\"}}\n                \n    //         break;\n    //     case \"used\":\n    //         function(){item=>{return item.condition === \"used\"}}\n    //         break;\n    \n    //     default:\n    //         break;\n    // }\n}\n\n    return (\n        <div>\n            {products.map((item) => {\n                 <BootstrapTable\n                 key={item.id}\n                 title={item.title}\n                 price={item.price}\n                 currency_id={item.currency_id}\n                 available_quantity={item.available_quantity}\n                 thumbnail={item.thumbnail}\n                 condition={item.condition}\n                 pagination={paginationFactory()}\n             />\n            })}\n       \n        </div>\n\n    )\n\n        // <Fragment>\n        //     {\" \"}\n        //     <div>COmoponente catalogo</div>\n        //     <h1>{props.mascota}</h1>\n        //     <form className=\"\" onSubmit={onSubmitForm}>\n        //         <button type=\"submit\">tocame bb</button>\n        //     </form>\n        //              <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        //                 Orden por Precio \n        //                 <hr/>\n        //                 <label className=\"btn btn-secondary\" onClick={() =>{setOrderBy ('priceASC')}}>\n        //                     <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> M- a M+\n        //                 </label>\n        //                 <label className=\"btn btn-secondary\" onClick={() =>{setOrderBy ('priceDSC')}}  >\n        //                     <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> M+ a M-\n        //                 </label> \n                        \n        //             </div>\n        //             <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n        //                 Orden por Condicion\n        //                 <hr/>\n        //                 <label className=\"btn btn-secondary\" onClick={() =>{setEstadoProd (\"new\")}}>\n        //                     <input type=\"radio\" name=\"options\" id=\"option2\" autocomplete=\"off\"/> nuevo\n        //                 </label>\n        //                 <label className=\"btn btn-secondary\" onClick={() =>{setEstadoProd (\"used\")}}  >\n        //                     <input type=\"radio\" name=\"options\" id=\"option3\" autocomplete=\"off\"/> usado\n        //                 </label> \n                        \n        //             </div>\n                    \n        //     <div>\n        //         {/* {products.sort(sortF).filter(estadoProd === \"new\" ? esNuevo() : esUsado()).map((item) => {\n        //             return (\n        //                 <ProductCard\n        //                     key={item.id}\n\n        //                     title={item.title}\n        //                     price={item.price}\n        //                     currency_id={item.currency_id}\n        //                     available_quantity={item.available_quantity}\n        //                     thumbnail={item.thumbnail}\n        //                     condition={item.condition}\n        //                 />\n                        \n        //             );\n        //         })} */}\n                \n\n                        \n        //     </div>\n        // </Fragment>\n    \n}\n\nexport default Catalogo"]},"metadata":{},"sourceType":"module"}